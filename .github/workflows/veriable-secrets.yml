name: Generate ASCII Artwork

on: push
########### env Workflow lavel #####################
env:
    DOCKER_USERNAME: siddharth1
    IMAGE_NAME: github-actions-nginx  # Set your image name here
    CONTAINER_REGISTORY: docker.io

jobs:
    docker:
        runs-on: ubuntu-latest

        steps:
          - name: Docker Build
            run: echo docker build -t ${{ env.CONTAINER_REGISTORY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest .
    
          - name: Docker Login
            env:
                DOCKER_PASSWORD: s3UrePaSsw0rd
            run: echo "${{ env.DOCKER_PASSWORD }}" | docker login --username="${{ env.DOCKER_USERNAME }}" --password-stdin
    
          - name: Docker Publish
            run: echo docker push ${{ env.CONTAINER_REGISTORY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

    deploy:
        needs: docker
        runs-on: ubuntu-latest
        steps:
          - name: Docker Run
            run: echo docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTORY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
    
########### env JOB lavel #####################
#   docker:
#     runs-on: ubuntu-latest
#     env:
#       DOCKER_USERNAME: dockerUsername
#       IMAGE_NAME: imageName  # Set your image name here
#       CONTAINER_REGISTORY: docker.io
#     steps:
#       - name: Docker Build
#         run: docker build -t ${{ env.CONTAINER_REGISTORY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

#       - name: Docker Login
#         env:
#             DOCKER_PASSWORD: s3UrePaSsw0rd
#         run: echo "${{ env.DOCKER_PASSWORD }}" | docker login --username="${{ env.DOCKER_USERNAME }}" --password-stdin

#       - name: Docker Publish
#         run: docker push docker.io/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

#   deploy:
#     needs: docker
#     runs-on: ubuntu-latest
#     env:
#       DOCKER_USERNAME: dockerUsername  # Optional if needed in this job
#       IMAGE_NAME: imageName  # Optional if needed in this job
#       CONTAINER_REGISTORY: docker.io
#     steps:
#       - name: Docker Run
#         run: docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTORY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

########### env STEP lavel #####################
#   docker:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker Build
#         env:
#           DOCKER_USERNAME: siddharth1
#           CONTAINER_REGISTORY: docker.io
#           IMAGE_NAME: imageName
#         run: docker build -t $CONTAINER_REGISTORY/$DOCKER_USERNAME/$IMAGE_NAME:latest .
        
#       - name: Docker Login
#         env:
#           DOCKER_USERNAME: dockerUsername
#           DOCKER_PASSWORD: s3UrePaSsw0rd
#         run: echo "$DOCKER_PASSWORD" | docker login --username="$DOCKER_USERNAME" --password-stdin

#       - name: Docker Publish
#         env:
#           DOCKER_USERNAME: dockerUsername
#           IMAGE_NAME: imageName
#           CONTAINER_REGISTORY: docker.io
#         run: docker push ${{ env.CONTAINER_REGISTORY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

#   deploy:
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker Run
#         env:
#           DOCKER_USERNAME: dockerUsername
#           IMAGE_NAME: imageName
#         run: docker run -d -p 8080:80 docker.io/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

########### without env #####################
    # docker:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Docker Build
    #         run: docker build -t docker.io/dockerUsername/imageName:latest

    #         - name: Docker Login
    #         run: docker login --username=dockerUsername --password=s3UrePaSsw0rd

    #         - name: Docker Publish
    #         run: docker push docker.io/dockerUsername/imageName:latest
    # deploy:
    #     needs: docker
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Docker run
    #         run : docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest            